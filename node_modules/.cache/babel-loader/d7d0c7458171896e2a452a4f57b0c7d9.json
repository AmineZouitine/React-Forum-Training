{"ast":null,"code":"'use strict';\n\nconst AssertError = require('./error');\n\nconst internals = {};\n\nmodule.exports = function (condition) {\n  if (condition) {\n    return;\n  }\n\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (args.length === 1 && args[0] instanceof Error) {\n    throw args[0];\n  }\n\n  throw new AssertError(args);\n};","map":{"version":3,"names":["AssertError","require","internals","module","exports","condition","args","length","Error"],"sources":["/home/aminou/React/mon-coter-somber/node_modules/@hapi/hoek/lib/assert.js"],"sourcesContent":["'use strict';\n\nconst AssertError = require('./error');\n\n\nconst internals = {};\n\n\nmodule.exports = function (condition, ...args) {\n\n    if (condition) {\n        return;\n    }\n\n    if (args.length === 1 &&\n        args[0] instanceof Error) {\n\n        throw args[0];\n    }\n\n    throw new AssertError(args);\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,SAAD,CAA3B;;AAGA,MAAMC,SAAS,GAAG,EAAlB;;AAGAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,SAAV,EAA8B;EAE3C,IAAIA,SAAJ,EAAe;IACX;EACH;;EAJ0C,kCAANC,IAAM;IAANA,IAAM;EAAA;;EAM3C,IAAIA,IAAI,CAACC,MAAL,KAAgB,CAAhB,IACAD,IAAI,CAAC,CAAD,CAAJ,YAAmBE,KADvB,EAC8B;IAE1B,MAAMF,IAAI,CAAC,CAAD,CAAV;EACH;;EAED,MAAM,IAAIN,WAAJ,CAAgBM,IAAhB,CAAN;AACH,CAbD"},"metadata":{},"sourceType":"script"}