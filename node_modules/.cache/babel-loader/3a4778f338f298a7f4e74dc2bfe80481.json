{"ast":null,"code":"'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\n\nconst Any = require('./any');\n\nconst Common = require('../common');\n\nconst Values = require('../values');\n\nconst internals = {};\n\ninternals.isBool = function (value) {\n  return typeof value === 'boolean';\n};\n\nmodule.exports = Any.extend({\n  type: 'boolean',\n  flags: {\n    sensitive: {\n      default: false\n    }\n  },\n  terms: {\n    falsy: {\n      init: null,\n      manifest: 'values'\n    },\n    truthy: {\n      init: null,\n      manifest: 'values'\n    }\n  },\n\n  coerce(value, _ref) {\n    let {\n      schema\n    } = _ref;\n\n    if (typeof value === 'boolean') {\n      return;\n    }\n\n    if (typeof value === 'string') {\n      const normalized = schema._flags.sensitive ? value : value.toLowerCase();\n      value = normalized === 'true' ? true : normalized === 'false' ? false : value;\n    }\n\n    if (typeof value !== 'boolean') {\n      value = schema.$_terms.truthy && schema.$_terms.truthy.has(value, null, null, !schema._flags.sensitive) || (schema.$_terms.falsy && schema.$_terms.falsy.has(value, null, null, !schema._flags.sensitive) ? false : value);\n    }\n\n    return {\n      value\n    };\n  },\n\n  validate(value, _ref2) {\n    let {\n      error\n    } = _ref2;\n\n    if (typeof value !== 'boolean') {\n      return {\n        value,\n        errors: error('boolean.base')\n      };\n    }\n  },\n\n  rules: {\n    truthy: {\n      method() {\n        for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n          values[_key] = arguments[_key];\n        }\n\n        Common.verifyFlat(values, 'truthy');\n        const obj = this.clone();\n        obj.$_terms.truthy = obj.$_terms.truthy || new Values();\n\n        for (let i = 0; i < values.length; ++i) {\n          const value = values[i];\n          Assert(value !== undefined, 'Cannot call truthy with undefined');\n          obj.$_terms.truthy.add(value);\n        }\n\n        return obj;\n      }\n\n    },\n    falsy: {\n      method() {\n        for (var _len2 = arguments.length, values = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          values[_key2] = arguments[_key2];\n        }\n\n        Common.verifyFlat(values, 'falsy');\n        const obj = this.clone();\n        obj.$_terms.falsy = obj.$_terms.falsy || new Values();\n\n        for (let i = 0; i < values.length; ++i) {\n          const value = values[i];\n          Assert(value !== undefined, 'Cannot call falsy with undefined');\n          obj.$_terms.falsy.add(value);\n        }\n\n        return obj;\n      }\n\n    },\n    sensitive: {\n      method() {\n        let enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        return this.$_setFlag('sensitive', enabled);\n      }\n\n    }\n  },\n  cast: {\n    number: {\n      from: internals.isBool,\n\n      to(value, helpers) {\n        return value ? 1 : 0;\n      }\n\n    },\n    string: {\n      from: internals.isBool,\n\n      to(value, helpers) {\n        return value ? 'true' : 'false';\n      }\n\n    }\n  },\n  manifest: {\n    build(obj, desc) {\n      if (desc.truthy) {\n        obj = obj.truthy(...desc.truthy);\n      }\n\n      if (desc.falsy) {\n        obj = obj.falsy(...desc.falsy);\n      }\n\n      return obj;\n    }\n\n  },\n  messages: {\n    'boolean.base': '{{#label}} must be a boolean'\n  }\n});","map":{"version":3,"names":["Assert","require","Any","Common","Values","internals","isBool","value","module","exports","extend","type","flags","sensitive","default","terms","falsy","init","manifest","truthy","coerce","schema","normalized","_flags","toLowerCase","$_terms","has","validate","error","errors","rules","method","values","verifyFlat","obj","clone","i","length","undefined","add","enabled","$_setFlag","cast","number","from","to","helpers","string","build","desc","messages"],"sources":["/home/aminou/React/mon-coter-somber/node_modules/@hapi/joi/lib/types/boolean.js"],"sourcesContent":["'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\n\nconst Any = require('./any');\nconst Common = require('../common');\nconst Values = require('../values');\n\n\nconst internals = {};\n\n\ninternals.isBool = function (value) {\n\n    return typeof value === 'boolean';\n};\n\n\nmodule.exports = Any.extend({\n\n    type: 'boolean',\n\n    flags: {\n\n        sensitive: { default: false }\n    },\n\n    terms: {\n\n        falsy: {\n            init: null,\n            manifest: 'values'\n        },\n\n        truthy: {\n            init: null,\n            manifest: 'values'\n        }\n    },\n\n    coerce(value, { schema }) {\n\n        if (typeof value === 'boolean') {\n            return;\n        }\n\n        if (typeof value === 'string') {\n            const normalized = schema._flags.sensitive ? value : value.toLowerCase();\n            value = normalized === 'true' ? true : (normalized === 'false' ? false : value);\n        }\n\n        if (typeof value !== 'boolean') {\n            value = schema.$_terms.truthy && schema.$_terms.truthy.has(value, null, null, !schema._flags.sensitive) ||\n                (schema.$_terms.falsy && schema.$_terms.falsy.has(value, null, null, !schema._flags.sensitive) ? false : value);\n        }\n\n        return { value };\n    },\n\n    validate(value, { error }) {\n\n        if (typeof value !== 'boolean') {\n            return { value, errors: error('boolean.base') };\n        }\n    },\n\n    rules: {\n        truthy: {\n            method(...values) {\n\n                Common.verifyFlat(values, 'truthy');\n\n                const obj = this.clone();\n                obj.$_terms.truthy = obj.$_terms.truthy || new Values();\n\n                for (let i = 0; i < values.length; ++i) {\n                    const value = values[i];\n\n                    Assert(value !== undefined, 'Cannot call truthy with undefined');\n                    obj.$_terms.truthy.add(value);\n                }\n\n                return obj;\n            }\n        },\n\n        falsy: {\n            method(...values) {\n\n                Common.verifyFlat(values, 'falsy');\n\n                const obj = this.clone();\n                obj.$_terms.falsy = obj.$_terms.falsy || new Values();\n\n                for (let i = 0; i < values.length; ++i) {\n                    const value = values[i];\n\n                    Assert(value !== undefined, 'Cannot call falsy with undefined');\n                    obj.$_terms.falsy.add(value);\n                }\n\n                return obj;\n            }\n        },\n\n        sensitive: {\n            method(enabled = true) {\n\n                return this.$_setFlag('sensitive', enabled);\n            }\n        }\n    },\n\n    cast: {\n        number: {\n            from: internals.isBool,\n            to(value, helpers) {\n\n                return value ? 1 : 0;\n            }\n        },\n        string: {\n            from: internals.isBool,\n            to(value, helpers) {\n\n                return value ? 'true' : 'false';\n            }\n        }\n    },\n\n    manifest: {\n\n        build(obj, desc) {\n\n            if (desc.truthy) {\n                obj = obj.truthy(...desc.truthy);\n            }\n\n            if (desc.falsy) {\n                obj = obj.falsy(...desc.falsy);\n            }\n\n            return obj;\n        }\n    },\n\n    messages: {\n        'boolean.base': '{{#label}} must be a boolean'\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}