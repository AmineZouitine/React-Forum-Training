{"ast":null,"code":"'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\n\nconst Clone = require('@hapi/hoek/lib/clone');\n\nconst Common = require('./common');\n\nconst internals = {\n  max: 1000,\n  supported: new Set(['undefined', 'boolean', 'number', 'string'])\n};\nexports.provider = {\n  provision(options) {\n    return new internals.Cache(options);\n  }\n\n}; // Least Recently Used (LRU) Cache\n\ninternals.Cache = class {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    Common.assertOptions(options, ['max']);\n    Assert(options.max === undefined || options.max && options.max > 0 && isFinite(options.max), 'Invalid max cache size');\n    this._max = options.max || internals.max;\n    this._map = new Map(); // Map of nodes by key\n\n    this._list = new internals.List(); // List of nodes (most recently used in head)\n  }\n\n  get length() {\n    return this._map.size;\n  }\n\n  set(key, value) {\n    if (key !== null && !internals.supported.has(typeof key)) {\n      return;\n    }\n\n    let node = this._map.get(key);\n\n    if (node) {\n      node.value = value;\n\n      this._list.first(node);\n\n      return;\n    }\n\n    node = this._list.unshift({\n      key,\n      value\n    });\n\n    this._map.set(key, node);\n\n    this._compact();\n  }\n\n  get(key) {\n    const node = this._map.get(key);\n\n    if (node) {\n      this._list.first(node);\n\n      return Clone(node.value);\n    }\n  }\n\n  _compact() {\n    if (this._map.size > this._max) {\n      const node = this._list.pop();\n\n      this._map.delete(node.key);\n    }\n  }\n\n};\ninternals.List = class {\n  constructor() {\n    this.tail = null;\n    this.head = null;\n  }\n\n  unshift(node) {\n    node.next = null;\n    node.prev = this.head;\n\n    if (this.head) {\n      this.head.next = node;\n    }\n\n    this.head = node;\n\n    if (!this.tail) {\n      this.tail = node;\n    }\n\n    return node;\n  }\n\n  first(node) {\n    if (node === this.head) {\n      return;\n    }\n\n    this._remove(node);\n\n    this.unshift(node);\n  }\n\n  pop() {\n    return this._remove(this.tail);\n  }\n\n  _remove(node) {\n    const {\n      next,\n      prev\n    } = node;\n    next.prev = prev;\n\n    if (prev) {\n      prev.next = next;\n    }\n\n    if (node === this.tail) {\n      this.tail = next;\n    }\n\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n\n};","map":{"version":3,"names":["Assert","require","Clone","Common","internals","max","supported","Set","exports","provider","provision","options","Cache","constructor","assertOptions","undefined","isFinite","_max","_map","Map","_list","List","length","size","set","key","value","has","node","get","first","unshift","_compact","pop","delete","tail","head","next","prev","_remove"],"sources":["/home/aminou/React/mon-coter-somber/node_modules/@hapi/joi/lib/cache.js"],"sourcesContent":["'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\nconst Clone = require('@hapi/hoek/lib/clone');\n\nconst Common = require('./common');\n\n\nconst internals = {\n    max: 1000,\n    supported: new Set(['undefined', 'boolean', 'number', 'string'])\n};\n\n\nexports.provider = {\n\n    provision(options) {\n\n        return new internals.Cache(options);\n    }\n};\n\n\n// Least Recently Used (LRU) Cache\n\ninternals.Cache = class {\n\n    constructor(options = {}) {\n\n        Common.assertOptions(options, ['max']);\n        Assert(options.max === undefined || options.max && options.max > 0 && isFinite(options.max), 'Invalid max cache size');\n\n        this._max = options.max || internals.max;\n\n        this._map = new Map();                          // Map of nodes by key\n        this._list = new internals.List();              // List of nodes (most recently used in head)\n    }\n\n    get length() {\n\n        return this._map.size;\n    }\n\n    set(key, value) {\n\n        if (key !== null &&\n            !internals.supported.has(typeof key)) {\n\n            return;\n        }\n\n        let node = this._map.get(key);\n        if (node) {\n            node.value = value;\n            this._list.first(node);\n            return;\n        }\n\n        node = this._list.unshift({ key, value });\n        this._map.set(key, node);\n        this._compact();\n    }\n\n    get(key) {\n\n        const node = this._map.get(key);\n        if (node) {\n            this._list.first(node);\n            return Clone(node.value);\n        }\n    }\n\n    _compact() {\n\n        if (this._map.size > this._max) {\n            const node = this._list.pop();\n            this._map.delete(node.key);\n        }\n    }\n};\n\n\ninternals.List = class {\n\n    constructor() {\n\n        this.tail = null;\n        this.head = null;\n    }\n\n    unshift(node) {\n\n        node.next = null;\n        node.prev = this.head;\n\n        if (this.head) {\n            this.head.next = node;\n        }\n\n        this.head = node;\n\n        if (!this.tail) {\n            this.tail = node;\n        }\n\n        return node;\n    }\n\n    first(node) {\n\n        if (node === this.head) {\n            return;\n        }\n\n        this._remove(node);\n        this.unshift(node);\n    }\n\n    pop() {\n\n        return this._remove(this.tail);\n    }\n\n    _remove(node) {\n\n        const { next, prev } = node;\n\n        next.prev = prev;\n\n        if (prev) {\n            prev.next = next;\n        }\n\n        if (node === this.tail) {\n            this.tail = next;\n        }\n\n        node.prev = null;\n        node.next = null;\n\n        return node;\n    }\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAAtB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AAEA,MAAME,MAAM,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AAGA,MAAMG,SAAS,GAAG;EACdC,GAAG,EAAE,IADS;EAEdC,SAAS,EAAE,IAAIC,GAAJ,CAAQ,CAAC,WAAD,EAAc,SAAd,EAAyB,QAAzB,EAAmC,QAAnC,CAAR;AAFG,CAAlB;AAMAC,OAAO,CAACC,QAAR,GAAmB;EAEfC,SAAS,CAACC,OAAD,EAAU;IAEf,OAAO,IAAIP,SAAS,CAACQ,KAAd,CAAoBD,OAApB,CAAP;EACH;;AALc,CAAnB,C,CASA;;AAEAP,SAAS,CAACQ,KAAV,GAAkB,MAAM;EAEpBC,WAAW,GAAe;IAAA,IAAdF,OAAc,uEAAJ,EAAI;IAEtBR,MAAM,CAACW,aAAP,CAAqBH,OAArB,EAA8B,CAAC,KAAD,CAA9B;IACAX,MAAM,CAACW,OAAO,CAACN,GAAR,KAAgBU,SAAhB,IAA6BJ,OAAO,CAACN,GAAR,IAAeM,OAAO,CAACN,GAAR,GAAc,CAA7B,IAAkCW,QAAQ,CAACL,OAAO,CAACN,GAAT,CAAxE,EAAuF,wBAAvF,CAAN;IAEA,KAAKY,IAAL,GAAYN,OAAO,CAACN,GAAR,IAAeD,SAAS,CAACC,GAArC;IAEA,KAAKa,IAAL,GAAY,IAAIC,GAAJ,EAAZ,CAPsB,CAO0B;;IAChD,KAAKC,KAAL,GAAa,IAAIhB,SAAS,CAACiB,IAAd,EAAb,CARsB,CAQ0B;EACnD;;EAES,IAANC,MAAM,GAAG;IAET,OAAO,KAAKJ,IAAL,CAAUK,IAAjB;EACH;;EAEDC,GAAG,CAACC,GAAD,EAAMC,KAAN,EAAa;IAEZ,IAAID,GAAG,KAAK,IAAR,IACA,CAACrB,SAAS,CAACE,SAAV,CAAoBqB,GAApB,CAAwB,OAAOF,GAA/B,CADL,EAC0C;MAEtC;IACH;;IAED,IAAIG,IAAI,GAAG,KAAKV,IAAL,CAAUW,GAAV,CAAcJ,GAAd,CAAX;;IACA,IAAIG,IAAJ,EAAU;MACNA,IAAI,CAACF,KAAL,GAAaA,KAAb;;MACA,KAAKN,KAAL,CAAWU,KAAX,CAAiBF,IAAjB;;MACA;IACH;;IAEDA,IAAI,GAAG,KAAKR,KAAL,CAAWW,OAAX,CAAmB;MAAEN,GAAF;MAAOC;IAAP,CAAnB,CAAP;;IACA,KAAKR,IAAL,CAAUM,GAAV,CAAcC,GAAd,EAAmBG,IAAnB;;IACA,KAAKI,QAAL;EACH;;EAEDH,GAAG,CAACJ,GAAD,EAAM;IAEL,MAAMG,IAAI,GAAG,KAAKV,IAAL,CAAUW,GAAV,CAAcJ,GAAd,CAAb;;IACA,IAAIG,IAAJ,EAAU;MACN,KAAKR,KAAL,CAAWU,KAAX,CAAiBF,IAAjB;;MACA,OAAO1B,KAAK,CAAC0B,IAAI,CAACF,KAAN,CAAZ;IACH;EACJ;;EAEDM,QAAQ,GAAG;IAEP,IAAI,KAAKd,IAAL,CAAUK,IAAV,GAAiB,KAAKN,IAA1B,EAAgC;MAC5B,MAAMW,IAAI,GAAG,KAAKR,KAAL,CAAWa,GAAX,EAAb;;MACA,KAAKf,IAAL,CAAUgB,MAAV,CAAiBN,IAAI,CAACH,GAAtB;IACH;EACJ;;AArDmB,CAAxB;AAyDArB,SAAS,CAACiB,IAAV,GAAiB,MAAM;EAEnBR,WAAW,GAAG;IAEV,KAAKsB,IAAL,GAAY,IAAZ;IACA,KAAKC,IAAL,GAAY,IAAZ;EACH;;EAEDL,OAAO,CAACH,IAAD,EAAO;IAEVA,IAAI,CAACS,IAAL,GAAY,IAAZ;IACAT,IAAI,CAACU,IAAL,GAAY,KAAKF,IAAjB;;IAEA,IAAI,KAAKA,IAAT,EAAe;MACX,KAAKA,IAAL,CAAUC,IAAV,GAAiBT,IAAjB;IACH;;IAED,KAAKQ,IAAL,GAAYR,IAAZ;;IAEA,IAAI,CAAC,KAAKO,IAAV,EAAgB;MACZ,KAAKA,IAAL,GAAYP,IAAZ;IACH;;IAED,OAAOA,IAAP;EACH;;EAEDE,KAAK,CAACF,IAAD,EAAO;IAER,IAAIA,IAAI,KAAK,KAAKQ,IAAlB,EAAwB;MACpB;IACH;;IAED,KAAKG,OAAL,CAAaX,IAAb;;IACA,KAAKG,OAAL,CAAaH,IAAb;EACH;;EAEDK,GAAG,GAAG;IAEF,OAAO,KAAKM,OAAL,CAAa,KAAKJ,IAAlB,CAAP;EACH;;EAEDI,OAAO,CAACX,IAAD,EAAO;IAEV,MAAM;MAAES,IAAF;MAAQC;IAAR,IAAiBV,IAAvB;IAEAS,IAAI,CAACC,IAAL,GAAYA,IAAZ;;IAEA,IAAIA,IAAJ,EAAU;MACNA,IAAI,CAACD,IAAL,GAAYA,IAAZ;IACH;;IAED,IAAIT,IAAI,KAAK,KAAKO,IAAlB,EAAwB;MACpB,KAAKA,IAAL,GAAYE,IAAZ;IACH;;IAEDT,IAAI,CAACU,IAAL,GAAY,IAAZ;IACAV,IAAI,CAACS,IAAL,GAAY,IAAZ;IAEA,OAAOT,IAAP;EACH;;AA3DkB,CAAvB"},"metadata":{},"sourceType":"script"}