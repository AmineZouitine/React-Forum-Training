{"ast":null,"code":"var _jsxFileName = \"/home/aminou/React/mon-coter-somber/src/CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport Navbar from \"./Navbar\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreatePost = () => {\n  _s();\n\n  const history = useNavigate();\n  const {\n    userToken,\n    setUserToken\n  } = ForumState();\n\n  const handleClick = async (title, content, author, category) => {\n    var seen = [];\n    const requestContent = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        author: author,\n        title: title,\n        content: content,\n        category: category,\n        responces: []\n      }, (key, val) => {\n        if (val != null && typeof val == \"object\") {\n          if (seen.indexOf(val) >= 0) {\n            return;\n          }\n\n          seen.push(val);\n        }\n\n        return val;\n      })\n    };\n    await fetch(\"/posts/create-new-post\", requestContent);\n  };\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      buttonValue: \"Se connecter\",\n      linkValue: \"connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-post-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Creation du post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Titre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: event => setTitle(event.target.value),\n        type: \"text\",\n        placeholder: \"Bons plans d'Italie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Contenue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: event => setContent(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"create-post-btn\",\n          onClick: () => handleClick(title, content, \"nothing\", \"Voyage\"),\n          children: \"Creer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreatePost, \"uVaIqE+HH1QXVc6Trq97HqfaJl0=\", true);\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["Link","Navbar","useState","CreatePost","history","useNavigate","userToken","setUserToken","ForumState","handleClick","title","content","author","category","seen","requestContent","method","headers","body","JSON","stringify","responces","key","val","indexOf","push","fetch","setTitle","setContent","event","target","value"],"sources":["/home/aminou/React/mon-coter-somber/src/CreatePost.js"],"sourcesContent":["import { Link} from 'react-router-dom'\nimport Navbar from \"./Navbar\";\nimport { useState } from 'react';\n\nconst CreatePost = () => {\n\n    const history = useNavigate();\n    const { userToken, setUserToken } = ForumState();\n    const handleClick = async (title, content, author, category) =>\n    {\n\n        var seen = [];\n        const requestContent = {\n            method: 'POST',\n            headers: {'Content-Type' : 'application/json'},\n            body: JSON.stringify(\n                {\n                    author: author,\n                    title: title,\n                    content: content,\n                    category: category,\n                    responces: []\n                },\n                (key, val) => {\n                    if (val != null && typeof val == \"object\") {\n                        if (seen.indexOf(val) >= 0) {\n                            return;\n                        }\n                        seen.push(val);\n                    }\n                    return val;\n                }\n            )\n        };\n        await fetch(\"/posts/create-new-post\", requestContent);\n    }\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    return (\n        <>\n            <Navbar buttonValue={\"Se connecter\"} linkValue={\"connexion\"} />\n            <div className=\"create-post-container\">\n                <h2>Creation du post</h2>\n                <p>Titre</p>\n                <input value={title} onChange={(event) => setTitle(event.target.value)} type=\"text\" placeholder=\"Bons plans d'Italie\" />\n\n                <p>Contenue</p>\n                <textarea value={content} onChange={(event) => setContent(event.target.value)}/>\n                <Link to='/'>\n                    <button id='create-post-btn' onClick={() => handleClick(title, content, \"nothing\", \"Voyage\")}>Creer</button>\n                </Link>\n            </div>\n        </>\n        \n    );\n}\n \nexport default CreatePost;\n"],"mappings":";;;AAAA,SAASA,IAAT,QAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EAErB,MAAMC,OAAO,GAAGC,WAAW,EAA3B;EACA,MAAM;IAAEC,SAAF;IAAaC;EAAb,IAA8BC,UAAU,EAA9C;;EACA,MAAMC,WAAW,GAAG,OAAOC,KAAP,EAAcC,OAAd,EAAuBC,MAAvB,EAA+BC,QAA/B,KACpB;IAEI,IAAIC,IAAI,GAAG,EAAX;IACA,MAAMC,cAAc,GAAG;MACnBC,MAAM,EAAE,MADW;MAEnBC,OAAO,EAAE;QAAC,gBAAiB;MAAlB,CAFU;MAGnBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CACF;QACIR,MAAM,EAAEA,MADZ;QAEIF,KAAK,EAAEA,KAFX;QAGIC,OAAO,EAAEA,OAHb;QAIIE,QAAQ,EAAEA,QAJd;QAKIQ,SAAS,EAAE;MALf,CADE,EAQF,CAACC,GAAD,EAAMC,GAAN,KAAc;QACV,IAAIA,GAAG,IAAI,IAAP,IAAe,OAAOA,GAAP,IAAc,QAAjC,EAA2C;UACvC,IAAIT,IAAI,CAACU,OAAL,CAAaD,GAAb,KAAqB,CAAzB,EAA4B;YACxB;UACH;;UACDT,IAAI,CAACW,IAAL,CAAUF,GAAV;QACH;;QACD,OAAOA,GAAP;MACH,CAhBC;IAHa,CAAvB;IAsBA,MAAMG,KAAK,CAAC,wBAAD,EAA2BX,cAA3B,CAAX;EACH,CA3BD;;EA4BA,MAAM,CAACL,KAAD,EAAQiB,QAAR,IAAoBzB,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACS,OAAD,EAAUiB,UAAV,IAAwB1B,QAAQ,CAAC,EAAD,CAAtC;EACA,oBACI;IAAA,wBACI,QAAC,MAAD;MAAQ,WAAW,EAAE,cAArB;MAAqC,SAAS,EAAE;IAAhD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,uBAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAO,KAAK,EAAEQ,KAAd;QAAqB,QAAQ,EAAGmB,KAAD,IAAWF,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlD;QAAwE,IAAI,EAAC,MAA7E;QAAoF,WAAW,EAAC;MAAhG;QAAA;QAAA;QAAA;MAAA,QAHJ,eAKI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ,eAMI;QAAU,KAAK,EAAEpB,OAAjB;QAA0B,QAAQ,EAAGkB,KAAD,IAAWD,UAAU,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd;MAAzD;QAAA;QAAA;QAAA;MAAA,QANJ,eAOI,QAAC,IAAD;QAAM,EAAE,EAAC,GAAT;QAAA,uBACI;UAAQ,EAAE,EAAC,iBAAX;UAA6B,OAAO,EAAE,MAAMtB,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB,SAAjB,EAA4B,QAA5B,CAAvD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAPJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAiBH,CAnDD;;GAAMR,U;;KAAAA,U;AAqDN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}