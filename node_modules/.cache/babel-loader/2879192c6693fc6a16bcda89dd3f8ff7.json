{"ast":null,"code":"'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\n\nconst Base = require('../base');\n\nconst Common = require('../common');\n\nconst Messages = require('../messages');\n\nconst internals = {};\nmodule.exports = Base.extend({\n  type: 'any',\n  flags: {\n    only: {\n      default: false\n    }\n  },\n  terms: {\n    alterations: {\n      init: null\n    },\n    examples: {\n      init: null\n    },\n    externals: {\n      init: null\n    },\n    metas: {\n      init: []\n    },\n    notes: {\n      init: []\n    },\n    shared: {\n      init: null\n    },\n    tags: {\n      init: []\n    },\n    whens: {\n      init: null\n    }\n  },\n  rules: {\n    custom: {\n      method(method, description) {\n        Assert(typeof method === 'function', 'Method must be a function');\n        Assert(description === undefined || description && typeof description === 'string', 'Description must be a non-empty string');\n        return this.$_addRule({\n          name: 'custom',\n          args: {\n            method,\n            description\n          }\n        });\n      },\n\n      validate(value, helpers, _ref) {\n        let {\n          method\n        } = _ref;\n\n        try {\n          return method(value, helpers);\n        } catch (err) {\n          return helpers.error('any.custom', {\n            error: err\n          });\n        }\n      },\n\n      args: ['method', 'description'],\n      multi: true\n    },\n    messages: {\n      method(messages) {\n        return this.prefs({\n          messages\n        });\n      }\n\n    },\n    shared: {\n      method(schema) {\n        Assert(Common.isSchema(schema) && schema._flags.id, 'Schema must be a schema with an id');\n        const obj = this.clone();\n        obj.$_terms.shared = obj.$_terms.shared || [];\n        obj.$_terms.shared.push(schema);\n        obj.$_mutateRegister(schema);\n        return obj;\n      }\n\n    },\n    warning: {\n      method(code, local) {\n        Assert(code && typeof code === 'string', 'Invalid warning code');\n        return this.$_addRule({\n          name: 'warning',\n          args: {\n            code,\n            local\n          },\n          warn: true\n        });\n      },\n\n      validate(value, helpers, _ref2) {\n        let {\n          code,\n          local\n        } = _ref2;\n        return helpers.error(code, local);\n      },\n\n      args: ['code', 'local'],\n      multi: true\n    }\n  },\n  modifiers: {\n    keep(rule) {\n      let enabled = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      rule.keep = enabled;\n    },\n\n    message(rule, message) {\n      rule.message = Messages.compile(message);\n    },\n\n    warn(rule) {\n      let enabled = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      rule.warn = enabled;\n    }\n\n  },\n  manifest: {\n    build(obj, desc) {\n      for (const key in desc) {\n        const values = desc[key];\n\n        if (['examples', 'externals', 'metas', 'notes', 'tags'].includes(key)) {\n          for (const value of values) {\n            obj = obj[key.slice(0, -1)](value);\n          }\n\n          continue;\n        }\n\n        if (key === 'alterations') {\n          const alter = {};\n\n          for (const {\n            target,\n            adjuster\n          } of values) {\n            alter[target] = adjuster;\n          }\n\n          obj = obj.alter(alter);\n          continue;\n        }\n\n        if (key === 'whens') {\n          for (const value of values) {\n            const {\n              ref,\n              is,\n              not,\n              then,\n              otherwise,\n              concat\n            } = value;\n\n            if (concat) {\n              obj = obj.concat(concat);\n            } else if (ref) {\n              obj = obj.when(ref, {\n                is,\n                not,\n                then,\n                otherwise,\n                switch: value.switch,\n                break: value.break\n              });\n            } else {\n              obj = obj.when(is, {\n                then,\n                otherwise,\n                break: value.break\n              });\n            }\n          }\n\n          continue;\n        }\n\n        if (key === 'shared') {\n          for (const value of values) {\n            obj = obj.shared(value);\n          }\n        }\n      }\n\n      return obj;\n    }\n\n  },\n  messages: {\n    'any.custom': '{{#label}} failed custom validation because {{#error.message}}',\n    'any.default': '{{#label}} threw an error when running default method',\n    'any.failover': '{{#label}} threw an error when running failover method',\n    'any.invalid': '{{#label}} contains an invalid value',\n    'any.only': '{{#label}} must be {if(#valids.length == 1, \"\", \"one of \")}{{#valids}}',\n    'any.ref': '{{#label}} {{#arg}} references \"{{#ref}}\" which {{#reason}}',\n    'any.required': '{{#label}} is required',\n    'any.unknown': '{{#label}} is not allowed'\n  }\n});","map":{"version":3,"names":["Assert","require","Base","Common","Messages","internals","module","exports","extend","type","flags","only","default","terms","alterations","init","examples","externals","metas","notes","shared","tags","whens","rules","custom","method","description","undefined","$_addRule","name","args","validate","value","helpers","err","error","multi","messages","prefs","schema","isSchema","_flags","id","obj","clone","$_terms","push","$_mutateRegister","warning","code","local","warn","modifiers","keep","rule","enabled","message","compile","manifest","build","desc","key","values","includes","slice","alter","target","adjuster","ref","is","not","then","otherwise","concat","when","switch","break"],"sources":["/home/aminou/React/mon-coter-somber/node_modules/@hapi/joi/lib/types/any.js"],"sourcesContent":["'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\n\nconst Base = require('../base');\nconst Common = require('../common');\nconst Messages = require('../messages');\n\n\nconst internals = {};\n\n\nmodule.exports = Base.extend({\n\n    type: 'any',\n\n    flags: {\n\n        only: { default: false }\n    },\n\n    terms: {\n\n        alterations: { init: null },\n        examples: { init: null },\n        externals: { init: null },\n        metas: { init: [] },\n        notes: { init: [] },\n        shared: { init: null },\n        tags: { init: [] },\n        whens: { init: null }\n    },\n\n    rules: {\n\n        custom: {\n            method(method, description) {\n\n                Assert(typeof method === 'function', 'Method must be a function');\n                Assert(description === undefined || description && typeof description === 'string', 'Description must be a non-empty string');\n\n                return this.$_addRule({ name: 'custom', args: { method, description } });\n            },\n            validate(value, helpers, { method }) {\n\n                try {\n                    return method(value, helpers);\n                }\n                catch (err) {\n                    return helpers.error('any.custom', { error: err });\n                }\n            },\n            args: ['method', 'description'],\n            multi: true\n        },\n\n        messages: {\n            method(messages) {\n\n                return this.prefs({ messages });\n            }\n        },\n\n        shared: {\n            method(schema) {\n\n                Assert(Common.isSchema(schema) && schema._flags.id, 'Schema must be a schema with an id');\n\n                const obj = this.clone();\n                obj.$_terms.shared = obj.$_terms.shared || [];\n                obj.$_terms.shared.push(schema);\n                obj.$_mutateRegister(schema);\n                return obj;\n            }\n        },\n\n        warning: {\n            method(code, local) {\n\n                Assert(code && typeof code === 'string', 'Invalid warning code');\n\n                return this.$_addRule({ name: 'warning', args: { code, local }, warn: true });\n            },\n            validate(value, helpers, { code, local }) {\n\n                return helpers.error(code, local);\n            },\n            args: ['code', 'local'],\n            multi: true\n        }\n    },\n\n    modifiers: {\n\n        keep(rule, enabled = true) {\n\n            rule.keep = enabled;\n        },\n\n        message(rule, message) {\n\n            rule.message = Messages.compile(message);\n        },\n\n        warn(rule, enabled = true) {\n\n            rule.warn = enabled;\n        }\n    },\n\n    manifest: {\n\n        build(obj, desc) {\n\n            for (const key in desc) {\n                const values = desc[key];\n\n                if (['examples', 'externals', 'metas', 'notes', 'tags'].includes(key)) {\n                    for (const value of values) {\n                        obj = obj[key.slice(0, -1)](value);\n                    }\n\n                    continue;\n                }\n\n                if (key === 'alterations') {\n                    const alter = {};\n                    for (const { target, adjuster } of values) {\n                        alter[target] = adjuster;\n                    }\n\n                    obj = obj.alter(alter);\n                    continue;\n                }\n\n                if (key === 'whens') {\n                    for (const value of values) {\n                        const { ref, is, not, then, otherwise, concat } = value;\n                        if (concat) {\n                            obj = obj.concat(concat);\n                        }\n                        else if (ref) {\n                            obj = obj.when(ref, { is, not, then, otherwise, switch: value.switch, break: value.break });\n                        }\n                        else {\n                            obj = obj.when(is, { then, otherwise, break: value.break });\n                        }\n                    }\n\n                    continue;\n                }\n\n                if (key === 'shared') {\n                    for (const value of values) {\n                        obj = obj.shared(value);\n                    }\n                }\n            }\n\n            return obj;\n        }\n    },\n\n    messages: {\n        'any.custom': '{{#label}} failed custom validation because {{#error.message}}',\n        'any.default': '{{#label}} threw an error when running default method',\n        'any.failover': '{{#label}} threw an error when running failover method',\n        'any.invalid': '{{#label}} contains an invalid value',\n        'any.only': '{{#label}} must be {if(#valids.length == 1, \"\", \"one of \")}{{#valids}}',\n        'any.ref': '{{#label}} {{#arg}} references \"{{#ref}}\" which {{#reason}}',\n        'any.required': '{{#label}} is required',\n        'any.unknown': '{{#label}} is not allowed'\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}