{"ast":null,"code":"'use strict';\n\nconst Clone = require('@hapi/hoek/lib/clone');\n\nconst Reach = require('@hapi/hoek/lib/reach');\n\nconst Common = require('./common');\n\nconst internals = {\n  value: Symbol('value')\n};\nmodule.exports = internals.State = class {\n  constructor(path, ancestors, state) {\n    this.path = path;\n    this.ancestors = ancestors; // [parent, ..., root]\n\n    this.mainstay = state.mainstay;\n    this.schemas = state.schemas; // [current, ..., root]\n\n    this.debug = null;\n  }\n\n  localize(path) {\n    let ancestors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let schema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    const state = new internals.State(path, ancestors, this);\n\n    if (schema && state.schemas) {\n      state.schemas = [internals.schemas(schema), ...state.schemas];\n    }\n\n    return state;\n  }\n\n  nest(schema, debug) {\n    const state = new internals.State(this.path, this.ancestors, this);\n    state.schemas = state.schemas && [internals.schemas(schema), ...state.schemas];\n    state.debug = debug;\n    return state;\n  }\n\n  shadow(value, reason) {\n    this.mainstay.shadow = this.mainstay.shadow || new internals.Shadow();\n    this.mainstay.shadow.set(this.path, value, reason);\n  }\n\n  snapshot() {\n    if (this.mainstay.shadow) {\n      this._snapshot = Clone(this.mainstay.shadow.node(this.path));\n    }\n  }\n\n  restore() {\n    if (this.mainstay.shadow) {\n      this.mainstay.shadow.override(this.path, this._snapshot);\n      this._snapshot = undefined;\n    }\n  }\n\n};\n\ninternals.schemas = function (schema) {\n  if (Common.isSchema(schema)) {\n    return {\n      schema\n    };\n  }\n\n  return schema;\n};\n\ninternals.Shadow = class {\n  constructor() {\n    this._values = null;\n  }\n\n  set(path, value, reason) {\n    if (!path.length) {\n      // No need to store root value\n      return;\n    }\n\n    if (reason === 'strip' && typeof path[path.length - 1] === 'number') {\n      // Cannot store stripped array values (due to shift)\n      return;\n    }\n\n    this._values = this._values || new Map();\n    let node = this._values;\n\n    for (let i = 0; i < path.length; ++i) {\n      const segment = path[i];\n      let next = node.get(segment);\n\n      if (!next) {\n        next = new Map();\n        node.set(segment, next);\n      }\n\n      node = next;\n    }\n\n    node[internals.value] = value;\n  }\n\n  get(path) {\n    const node = this.node(path);\n\n    if (node) {\n      return node[internals.value];\n    }\n  }\n\n  node(path) {\n    if (!this._values) {\n      return;\n    }\n\n    return Reach(this._values, path, {\n      iterables: true\n    });\n  }\n\n  override(path, node) {\n    if (!this._values) {\n      return;\n    }\n\n    const parents = path.slice(0, -1);\n    const own = path[path.length - 1];\n    const parent = Reach(this._values, parents, {\n      iterables: true\n    });\n\n    if (node) {\n      parent.set(own, node);\n      return;\n    }\n\n    if (parent) {\n      parent.delete(own);\n    }\n  }\n\n};","map":{"version":3,"names":["Clone","require","Reach","Common","internals","value","Symbol","module","exports","State","constructor","path","ancestors","state","mainstay","schemas","debug","localize","schema","nest","shadow","reason","Shadow","set","snapshot","_snapshot","node","restore","override","undefined","isSchema","_values","length","Map","i","segment","next","get","iterables","parents","slice","own","parent","delete"],"sources":["/home/aminou/React/mon-coter-somber/node_modules/@hapi/joi/lib/state.js"],"sourcesContent":["'use strict';\n\nconst Clone = require('@hapi/hoek/lib/clone');\nconst Reach = require('@hapi/hoek/lib/reach');\n\nconst Common = require('./common');\n\n\nconst internals = {\n    value: Symbol('value')\n};\n\n\nmodule.exports = internals.State = class {\n\n    constructor(path, ancestors, state) {\n\n        this.path = path;\n        this.ancestors = ancestors;                 // [parent, ..., root]\n\n        this.mainstay = state.mainstay;\n        this.schemas = state.schemas;               // [current, ..., root]\n        this.debug = null;\n    }\n\n    localize(path, ancestors = null, schema = null) {\n\n        const state = new internals.State(path, ancestors, this);\n\n        if (schema &&\n            state.schemas) {\n\n            state.schemas = [internals.schemas(schema), ...state.schemas];\n        }\n\n        return state;\n    }\n\n    nest(schema, debug) {\n\n        const state = new internals.State(this.path, this.ancestors, this);\n        state.schemas = state.schemas && [internals.schemas(schema), ...state.schemas];\n        state.debug = debug;\n        return state;\n    }\n\n    shadow(value, reason) {\n\n        this.mainstay.shadow = this.mainstay.shadow || new internals.Shadow();\n        this.mainstay.shadow.set(this.path, value, reason);\n    }\n\n    snapshot() {\n\n        if (this.mainstay.shadow) {\n            this._snapshot = Clone(this.mainstay.shadow.node(this.path));\n        }\n    }\n\n    restore() {\n\n        if (this.mainstay.shadow) {\n            this.mainstay.shadow.override(this.path, this._snapshot);\n            this._snapshot = undefined;\n        }\n    }\n};\n\n\ninternals.schemas = function (schema) {\n\n    if (Common.isSchema(schema)) {\n        return { schema };\n    }\n\n    return schema;\n};\n\n\ninternals.Shadow = class {\n\n    constructor() {\n\n        this._values = null;\n    }\n\n    set(path, value, reason) {\n\n        if (!path.length) {                                     // No need to store root value\n            return;\n        }\n\n        if (reason === 'strip' &&\n            typeof path[path.length - 1] === 'number') {        // Cannot store stripped array values (due to shift)\n\n            return;\n        }\n\n        this._values = this._values || new Map();\n\n        let node = this._values;\n        for (let i = 0; i < path.length; ++i) {\n            const segment = path[i];\n            let next = node.get(segment);\n            if (!next) {\n                next = new Map();\n                node.set(segment, next);\n            }\n\n            node = next;\n        }\n\n        node[internals.value] = value;\n    }\n\n    get(path) {\n\n        const node = this.node(path);\n        if (node) {\n            return node[internals.value];\n        }\n    }\n\n    node(path) {\n\n        if (!this._values) {\n            return;\n        }\n\n        return Reach(this._values, path, { iterables: true });\n    }\n\n    override(path, node) {\n\n        if (!this._values) {\n            return;\n        }\n\n        const parents = path.slice(0, -1);\n        const own = path[path.length - 1];\n        const parent = Reach(this._values, parents, { iterables: true });\n\n        if (node) {\n            parent.set(own, node);\n            return;\n        }\n\n        if (parent) {\n            parent.delete(own);\n        }\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}